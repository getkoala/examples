import type { Profile } from './indexing';
import { BusinessClassification, CompanyTags, CompanyTechCategory, CompanyType, Country, CountryCode, EmployeeRange, EstimatedRevenueRange, Industry, IndustryGroup, Sector, SubIndustry, TechTags, Timezone } from './__types__/company';
export declare class Company {
    private traits;
    constructor(profile: Profile);
    get name(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get domain(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get sector(): {
        is: (target: Sector) => boolean;
        includesItem: (...targets: Sector[]) => boolean;
        includesAnyOf: (...targets: Sector[]) => boolean;
    };
    get type(): {
        is: (target: CompanyType) => boolean;
        includesItem: (...targets: CompanyType[]) => boolean;
        includesAnyOf: (...targets: CompanyType[]) => boolean;
    };
    get industryGroup(): {
        is: (target: IndustryGroup) => boolean;
        includesItem: (...targets: IndustryGroup[]) => boolean;
        includesAnyOf: (...targets: IndustryGroup[]) => boolean;
    };
    get industry(): {
        is: (target: Industry) => boolean;
        includesItem: (...targets: Industry[]) => boolean;
        includesAnyOf: (...targets: Industry[]) => boolean;
    };
    get subIndustry(): {
        is: (target: SubIndustry) => boolean;
        includesItem: (...targets: SubIndustry[]) => boolean;
        includesAnyOf: (...targets: SubIndustry[]) => boolean;
    };
    get foundedYear(): {
        is: (target: number) => boolean;
        greaterThan: (target: number) => boolean;
        greaterThanOrEqual: (target: number) => boolean;
        lessThan: (target: number) => boolean;
        lessThanOrEqual: (target: number) => boolean;
    };
    get timezone(): {
        is: (target: Timezone) => boolean;
        includesItem: (...targets: Timezone[]) => boolean;
        includesAnyOf: (...targets: Timezone[]) => boolean;
    };
    get city(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get state(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get stateCode(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get country(): {
        is: (target: Country) => boolean;
        includesItem: (...targets: Country[]) => boolean;
        includesAnyOf: (...targets: Country[]) => boolean;
    };
    get countryCode(): {
        is: (target: CountryCode) => boolean;
        includesItem: (...targets: CountryCode[]) => boolean;
        includesAnyOf: (...targets: CountryCode[]) => boolean;
    };
    get employeeCount(): {
        is: (target: number) => boolean;
        greaterThan: (target: number) => boolean;
        greaterThanOrEqual: (target: number) => boolean;
        lessThan: (target: number) => boolean;
        lessThanOrEqual: (target: number) => boolean;
    };
    get employeesRange(): {
        is: (target: EmployeeRange) => boolean;
        includesItem: (...targets: EmployeeRange[]) => boolean;
        includesAnyOf: (...targets: EmployeeRange[]) => boolean;
    };
    get marketCap(): {
        is: (target: number) => boolean;
        greaterThan: (target: number) => boolean;
        greaterThanOrEqual: (target: number) => boolean;
        lessThan: (target: number) => boolean;
        lessThanOrEqual: (target: number) => boolean;
    };
    get amountRaised(): {
        is: (target: number) => boolean;
        greaterThan: (target: number) => boolean;
        greaterThanOrEqual: (target: number) => boolean;
        lessThan: (target: number) => boolean;
        lessThanOrEqual: (target: number) => boolean;
    };
    get annualRevenue(): {
        is: (target: number) => boolean;
        greaterThan: (target: number) => boolean;
        greaterThanOrEqual: (target: number) => boolean;
        lessThan: (target: number) => boolean;
        lessThanOrEqual: (target: number) => boolean;
    };
    get estimatedAnnualRevenue(): {
        is: (target: EstimatedRevenueRange) => boolean;
        includesItem: (...targets: EstimatedRevenueRange[]) => boolean;
        includesAnyOf: (...targets: EstimatedRevenueRange[]) => boolean;
    };
    get tech(): {
        includesItem: (target: TechTags) => boolean;
        includesAnyOf: (...targets: TechTags[]) => boolean;
        includesAllOf: (...targets: TechTags[]) => boolean;
    };
    get techCategories(): {
        includesItem: (target: CompanyTechCategory) => boolean;
        includesAnyOf: (...targets: CompanyTechCategory[]) => boolean;
        includesAllOf: (...targets: CompanyTechCategory[]) => boolean;
    };
    get tags(): {
        includesItem: (target: CompanyTags | BusinessClassification) => boolean;
        includesAnyOf: (...targets: (CompanyTags | BusinessClassification)[]) => boolean;
        includesAllOf: (...targets: (CompanyTags | BusinessClassification)[]) => boolean;
    };
    isB2B(): boolean;
    isB2C(): boolean;
    isEnterprise(): boolean;
    isEcommerce(): boolean;
    isSaas(): boolean;
}
