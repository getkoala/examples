{"version":3,"file":"js-bloom.cjs.development.js","sources":["../src/bitarray.ts","../src/zlib.ts","../src/bloom-filter.ts","../src/count-min-sketch/index.ts"],"sourcesContent":["const ELEMENT_WIDTH = 32;\n\nexport class BA {\n  constructor(private size: number, public field?: number[] | null) {\n    this.size = size;\n    this.field = field || [];\n\n    const arrayLength = Math.floor((size - 1) / ELEMENT_WIDTH + 1);\n    if (!field) {\n      for (\n        let i = 0, end = arrayLength - 1, asc = 0 <= end;\n        asc ? i <= end : i >= end;\n        asc ? i++ : i--\n      ) {\n        this.field[i] = 0;\n      }\n    }\n  }\n\n  add(position: number) {\n    return this.set(position, 1);\n  }\n\n  remove(position: number) {\n    return this.set(position, 0);\n  }\n\n  set(position: number, value: number) {\n    if (position >= this.size) {\n      throw new Error('BitArray index out of bounds');\n    }\n    const aPos = arrayPosition(position);\n    const bChange = bitChange(position);\n    if (value === 1) {\n      this.field[aPos] = abs(this.field[aPos] | bChange);\n    } else if ((this.field[aPos] & bChange) !== 0) {\n      this.field[aPos] = abs(this.field[aPos] ^ bChange);\n    }\n    return true;\n  }\n\n  get(position: number) {\n    if (position >= this.size) {\n      throw new Error('BitArray index out of bounds');\n    }\n    const aPos = arrayPosition(position);\n    const bChange = bitChange(position);\n    if (abs(this.field[aPos] & bChange) > 0) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n}\n\nfunction arrayPosition(position: number) {\n  return Math.floor(position / ELEMENT_WIDTH);\n}\n\nfunction bitChange(position: number) {\n  return abs(1 << position % ELEMENT_WIDTH);\n}\n\nfunction abs(val: number) {\n  if (val < 0) {\n    val += 4294967295;\n  }\n  return val;\n}\n","function crcTable() {\n  let c;\n  let crcTable = [];\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ (c >>> 1) : c >>> 1;\n    }\n    crcTable[n] = c;\n  }\n  return crcTable;\n}\n\nconst CRC32_TABLE = crcTable();\n\nexport const crc32 = (string: string) => {\n  const bytes = bytesFor(string);\n  let crc = 0;\n  let n = 0;\n  crc = crc ^ -1;\n  let i = 0;\n  const iTop = bytes.length;\n\n  while (i < iTop) {\n    n = (crc ^ bytes[i]) & 0xff;\n    crc = (crc >>> 8) ^ CRC32_TABLE[n];\n    i++;\n  }\n  crc = crc ^ -1;\n  if (crc < 0) {\n    crc += 4294967296;\n  }\n  return crc;\n};\n\nconst bytesFor = (string: string) => {\n  const bytes = [];\n  let i = 0;\n\n  while (i < string.length) {\n    bytes.push(string.charCodeAt(i));\n    ++i;\n  }\n  return bytes;\n};\n","import { BA } from './bitarray';\nimport { crc32 } from './zlib';\n\nexport interface JsBloomOptions {\n  size: number;\n  hashes: number;\n  seed?: number;\n  bits?: null | number[];\n}\n\nexport class JsBloom {\n  private bits: BA;\n\n  constructor(private options: Partial<JsBloomOptions> = {}) {\n    this.options = {\n      size: 100,\n      hashes: 4,\n      seed: new Date().getTime() / 1000,\n      bits: null,\n      ...options,\n    };\n\n    this.bits = new BA(this.options['size'], this.options['bits']);\n  }\n\n  add(...keys: string[]) {\n    for (let key of keys) {\n      for (let index of Array.from(this.indexesFor(key))) {\n        this.bits.add(index);\n      }\n    }\n  }\n\n  test(...keys: string[]) {\n    for (let key of keys) {\n      for (let index of this.indexesFor(key)) {\n        if (this.bits.get(index) === 0) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  toHash(): JsBloomOptions {\n    return {\n      size: this.options['size'],\n      hashes: this.options['hashes'],\n      seed: this.options['seed'],\n      bits: this.bits.field,\n    };\n  }\n\n  toJson() {\n    return JSON.stringify(this.toHash());\n  }\n\n  indexesFor(key: string) {\n    const indexes: number[] = [];\n    for (\n      let index = 0, end = this.options['hashes'] - 1, asc = 0 <= end;\n      asc ? index <= end : index >= end;\n      asc ? index++ : index--\n    ) {\n      indexes.push(\n        crc32(`${key}:${index + this.options['seed']}`) % this.options['size']\n      );\n    }\n\n    return indexes;\n  }\n}\n","import { crc32 } from \"../zlib\";\n\nexport interface CountMinSketchOptions {\n  size: number;\n  hashes: number;\n  data?: number[][];\n  seeds?: number[];\n}\n\nconst MAX_FIXNUM = Number.MAX_SAFE_INTEGER - 1;\n\nfunction createData(k: number, m: number): Uint32Array[] {\n  const data = new Array(k);\n  for (let i = 0; i < k; i++) {\n    data[i] = new Uint32Array(m);\n  }\n  return data;\n}\n\nfunction convertData(data: number[][]): Uint32Array[] {\n  return data.map((k) => Uint32Array.from(k));\n}\n\nfunction toArray(data: Uint32Array[]): number[][] {\n  return data.map((k) => Array.from(k));\n}\n\nfunction seeds(k: number): number[] {\n  const seeds = new Array(k);\n  for (let i = 0; i < k; i++) {\n    seeds[i] = Math.random() * (MAX_FIXNUM + 1);\n  }\n  return seeds;\n}\n\nconst DEFAULTS: Partial<CountMinSketchOptions> = {\n  size: 100,\n  hashes: 4,\n};\nexport class CountMinSketch {\n  private options: CountMinSketchOptions;\n  private k: number;\n  private m: number;\n  private data: Uint32Array[];\n  private seeds: number[];\n\n  constructor(options: Partial<CountMinSketchOptions> = {}) {\n    this.options = Object.assign(\n      {},\n      DEFAULTS,\n      options\n    ) as CountMinSketchOptions;\n\n    this.k = this.options.hashes;\n    this.m = this.options.size;\n    this.data = this.options.data\n      ? convertData(this.options.data)\n      : createData(this.k, this.m);\n\n    this.seeds = this.options.seeds || seeds(this.k);\n  }\n\n  count(item: string): number {\n    return this.add(item, 0);\n  }\n\n  add(item: string, n: number = 1): number {\n    let minCount = Infinity;\n\n    this.seeds.forEach((seed, i) => {\n      const hash = crc32(`${item}:${seed + i}`);\n\n      const j = hash % this.m;\n      const cnt = (this.data[i][j] += n);\n\n      if (cnt < minCount) {\n        minCount = cnt;\n      }\n    });\n\n    return minCount;\n  }\n\n  setCount(item: string, n: number) {\n    this.add(item, n - this.count(item));\n  }\n\n  toHash(): object {\n    return Object.assign({}, this.options, {\n      data: toArray(this.data),\n      seeds: this.seeds,\n    });\n  }\n\n  toJSON(): string {\n    return JSON.stringify(this.toHash());\n  }\n}\n"],"names":["ELEMENT_WIDTH","BA","size","field","arrayLength","Math","floor","i","end","asc","add","position","set","remove","value","Error","aPos","arrayPosition","bChange","bitChange","abs","get","val","crcTable","c","n","k","CRC32_TABLE","crc32","string","bytes","bytesFor","crc","iTop","length","push","charCodeAt","JsBloom","options","bits","hashes","seed","Date","getTime","keys","key","Array","from","indexesFor","index","test","toHash","toJson","JSON","stringify","indexes","MAX_FIXNUM","Number","MAX_SAFE_INTEGER","createData","m","data","Uint32Array","convertData","map","toArray","seeds","random","DEFAULTS","CountMinSketch","Object","assign","count","item","minCount","Infinity","forEach","hash","j","cnt","setCount","toJSON"],"mappings":"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"}