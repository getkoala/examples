import type { Profile } from './indexing';
import { Country, CountryCode, Timezone } from './__types__/company';
import { Role, Seniority, SubRole } from './__types__/person';
export declare class Person {
    private traits;
    constructor(profile: Profile);
    get timezone(): {
        is: (target: Timezone) => boolean;
        includesItem: (...targets: Timezone[]) => boolean;
        includesAnyOf: (...targets: Timezone[]) => boolean;
    };
    get city(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get state(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get stateCode(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get country(): {
        is: (target: Country) => boolean;
        includesItem: (...targets: Country[]) => boolean;
        includesAnyOf: (...targets: Country[]) => boolean;
    };
    get countryCode(): {
        is: (target: CountryCode) => boolean;
        includesItem: (...targets: CountryCode[]) => boolean;
        includesAnyOf: (...targets: CountryCode[]) => boolean;
    };
    get company(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get title(): {
        is: (target: string) => boolean;
        includesItem: (...targets: string[]) => boolean;
        includesAnyOf: (...targets: string[]) => boolean;
    };
    get role(): {
        is: (target: Role) => boolean;
        includesItem: (...targets: Role[]) => boolean;
        includesAnyOf: (...targets: Role[]) => boolean;
    };
    get subRole(): {
        is: (target: SubRole) => boolean;
        includesItem: (...targets: SubRole[]) => boolean;
        includesAnyOf: (...targets: SubRole[]) => boolean;
    };
    get seniority(): {
        is: (target: Seniority) => boolean;
        includesItem: (...targets: Seniority[]) => boolean;
        includesAnyOf: (...targets: Seniority[]) => boolean;
    };
}
